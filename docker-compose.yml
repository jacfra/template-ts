name: template-ts
version: "3.8"

services:
  postgres:
    container_name: postgres
    image: postgres:15-alpine
    volumes:
      - postgres_vol:/var/lib/postgresql/data
    networks:
      - gqlnode_postgres
      - pgadmin_postgres
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - PGPORT=${DB_PORT}
    ports:
      - "${DB_PORT}:${DB_PORT}" # host:container
    restart: on-failure
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    networks:
      - pgadmin_postgres
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:${PGADMIN_PORT}"
    depends_on:
      - postgres
    volumes:
      - pg_admin_vol:/var/lib/pgadmin
  gqlnode:
    container_name: gqlnode
    env_file: .env
    restart: always
    build:
      context: ./gqlnode
      dockerfile: gqlnode.Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - gqlnode_postgres
      - reactnode_gqlnode
    command:
      [
        "/app/wait-for-it.sh",
        "postgres:${DB_PORT}",
        "--",
        "node",
        "/app/dist/app.js"
      ]
    depends_on:
      - postgres
    ports:
      # host:container
      - "${GQLNODE_PORT}:${GQLNODE_PORT}"
  reactnode:
    container_name: reactnode
    restart: always
    env_file: .env
    build:
      context: ./reactnode
      dockerfile: reactnode.Dockerfile
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - reactnode_gqlnode
    command:
      [
        "/app/wait-for-it.sh",
        "gqlnode:${GQLNODE_PORT}",
        "--",
        "node",
        "/app/dist/app.js"
      ]
    ports:
      # host:container
      - "${REACTNODE_PORT}:${REACTNODE_PORT}"
    depends_on:
      - gqlnode

    # Uncomment the next four lines if you will use a ptrace-based debuggers like C++, Go, and Rust.
    # cap_add:
    #  - SYS_PTRACE
    # security_opt:
    #   - seccomp:unconfined

    # Uncomment the next line to use a non-root user for all processes.
    user: node
    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally. 
    # (Adding the "ports" property to this file will not forward from a Codespace.)


volumes:
  postgres_vol:
  pg_admin_vol:


networks:
  gqlnode_postgres:
  reactnode_gqlnode:
  pgadmin_postgres:
